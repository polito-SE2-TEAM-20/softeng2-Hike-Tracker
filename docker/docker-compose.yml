version: "3.6"
services:
  frontend:
    image: ghcr.io/polito-se2-team-20/frontend:demo
    ports:
      - "3600:3600"

  backend:
    ports:
      - "3500:3500"
    image: ghcr.io/polito-se2-team-20/backend:demo
    env_file: .env
    environment:
      - NODE_ENV=$NODE_ENV
      - PORT=$PORT
      - DB_HOST=$DB_HOST
      - DB_PORT=$DB_PORT
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - JWT_SECRET=$JWT_SECRET
      - BACKEND_HOST=$BACKEND_HOST
      - SQL_LOGGING=$SQL_LOGGING
      - SYNCHRONIZE=$SYNCHRONIZE
      - MAILER_USER=$MAILER_USER
      - MAILER_PASSWORD=$MAILER_PASSWORD
    networks:
      - stacknet
    depends_on:
      postgresql:
        condition: service_healthy

  postgresql:
    image: ghcr.io/polito-se2-team-20/demo-db:latest
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=$DB_USERNAME
      - POSTGRES_PASSWORD=$DB_PASSWORD
    volumes:
      - ./.docker/pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 20
    networks:
      - stacknet
    ports:
      - '5438:5432'

networks:
  stacknet:
    driver: bridge
